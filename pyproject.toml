[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rasberrypi-iot-experiment"
version = "1.0.0"
description = "FastAPI application to serve Sense HAT sensor data on Raspberry Pi"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Takumi Ishida", email = "your.email@example.com"}
]
keywords = ["raspberry-pi", "sense-hat", "fastapi", "sensors", "iot"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: System :: Hardware :: Hardware Drivers",
]
requires-python = ">=3.7"
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "jinja2>=3.1.2",
    "sense-hat>=2.7.1",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "isort>=5.12.0",
    "mypy>=1.7.1",
    "pre-commit>=3.5.0",
    "httpx>=0.25.2",
]

[project.urls]
Homepage = "https://github.com/yourusername/rasberrypi_iot_experiment"
Repository = "https://github.com/yourusername/rasberrypi_iot_experiment.git"
Issues = "https://github.com/yourusername/rasberrypi_iot_experiment/issues"

[project.scripts]
sense-hat-api = "main:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["sensors*", "web*"]

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=. --cov-report=term-missing"
testpaths = [
    "tests",
]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true 